{"version":3,"sources":["Components/Pop-up/Pop-up.jsx","Components/SortingAlgorithms/mergeSort.jsx","Components/SortingAlgorithms/QuickSort.jsx","Components/Bar.jsx","Components/SortingAlgorithms/BubbleSort.jsx","Components/SortingAlgorithms/insertionSort.jsx","Components/SwitchButton.jsx","App.js","serviceWorker.js","index.js"],"names":["Component","mergeSortHelper","array","begin","end","auxArray","animation","pivotIndex","Math","floor","mergeRoutine","k","l","r","push","successColor","dangerColor","QuickSortAnimation","n","length","Array","QuickSortHelper","randomIndex","random","newPivotIndex","i","swap","pivot","j","partitioningSubRoutine","temp","idx1","idx2","IN_PROGRESS","Bars","props","generateArray","setState","List","setTimeout","newList","state","size","newNumber","handleSizeChange","newSize","animationSpeed","createBar","height","Index","className","style","key","draggable","onDragStart","handleDrag","onDragOver","handleDrop","onDragEnd","handleEndDrag","myList","index","document","addEventListener","event","target","border","bubbleSort","Animation","currentList","sizeList","notSorted","bubbleSortAnimation","arrayBars","getElementsByClassName","barOneStyle","barTwoStyle","backgroundColor","insertionSort","InsertionSort","barStyle","mergeSort","slice","MergeSortAnimation","idx","newHeight","quickSort","myArray","console","log","bubbleRef","React","createRef","insertionRef","possibleSize","inProgress","prevProps","prevState","this","Button","onClick","DropdownButton","variant","title","map","Dropdown","Item","Switch","handleChange","modeFunction","isChecked","checked","onChange","type","LIGHT_COLOR","App","getDarkMode","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5950ea82.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport {Modal, Button, Accordion, Card} from \"react-bootstrap\"\nimport './Pop-up.css'\n\n\n\nexport default class Popup extends Component {\n\n\trender(){\n\t\treturn(\n\t\t\t<Modal aria-labelledby=\"contained-modal-title-vcenter\" size = \"lg\" centered show = {true}>\n\t\t\t  <Modal.Header >\n\t\t\t    <Modal.Title>Quick explanation</Modal.Title>\n\t\t\t  </Modal.Header>\n\n\t\t\t  <Modal.Body>\n\t\t\t  \t<h2> Algorithm description </h2>\n\t\t\t    <p> {this.props.text.algoExplanation} </p>\n\t\t\t  </Modal.Body>\n\n\t\t\t  <Accordion defaultActiveKey=\"0\">\n\t\t\t\t  <Card>\n\t\t\t\t    <Card.Header>\n\t\t\t\t      <Accordion.Toggle as = {Card.Header} eventKey=\"0\">\n\t\t\t\t        <h2> Time complexity analysis </h2>\n\t\t\t\t      </Accordion.Toggle>\n\t\t\t\t    </Card.Header>\n\t\t\t\t    <Accordion.Collapse eventKey=\"0\">\n\t\t\t\t      <Card.Body> <p> {this.props.text.complexity} <font className = 'MathFont'> O(n<sup>2</sup>) </font> in terms of time complexity! </p></Card.Body>\n\t\t\t\t    </Accordion.Collapse>\n\t\t\t\t  </Card>\n\t\t\t\t  <Card>\n\t\t\t\t    <Card.Header>\n\t\t\t\t      <Accordion.Toggle as = {Card.Header} eventKey=\"1\">\n\t\t\t\t        <h2> Still unclear ?</h2>\n\t\t\t\t      </Accordion.Toggle>\n\t\t\t\t    </Card.Header>\n\t\t\t\t    <Accordion.Collapse eventKey=\"1\">\n\t\t\t\t      <Card.Body>{this.props.text.link}</Card.Body>\n\t\t\t\t    </Accordion.Collapse>\n\t\t\t\t  </Card>\n\t\t\t\t</Accordion>\n\n\t\t\t  <Modal.Footer>\n\t\t\t    <Button variant=\"primary\" onClick = {this.props.sortFunction}> Got it! </Button>\n\t\t\t  </Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n} \n\n\n\n","import React from \"react\"; \n\n\nexport default function MergeSortAnimation(array) {\n\tlet n = array.length\n\tif (n <= 1) {\n\t\treturn []\n\t}\n\tconst animation = []\n\tconst auxArray = array.slice()\n\tmergeSortHelper(array, 0, n-1, auxArray, animation)\n\treturn animation\n}\n\nconst mergeSortHelper = (array, begin, end, auxArray, animation) => {\n\tif (begin === end) return \n\tlet pivotIndex = Math.floor((begin+end)/2)\n\tmergeSortHelper(auxArray, begin, pivotIndex, array, animation)\n\tmergeSortHelper(auxArray, pivotIndex +1, end, array, animation)\n\tmergeRoutine(array, begin, pivotIndex, end, auxArray, animation)\n}\n\nconst mergeRoutine = (array, begin, pivotIndex, end, auxArray, animation) => {\n\tconst dangerColor = 'rgba(30, 165, 251,0.95)'\n\tconst regularColor = 'rgba(116, 208, 241,0.8)'\n\tlet k = begin\n\tlet l = begin\n\tlet r = pivotIndex +1 \n\twhile (l<=pivotIndex && r<=end){\n\t\tif (auxArray[l] <= auxArray[r]) {\n\t\t\tarray[k] = auxArray[l]\n\t\t\tanimation.push( ['compare', k , l, dangerColor] )\n\t\t\tanimation.push( ['replace', k , auxArray[l]] )\n\t\t\tanimation.push( ['compare', k , l, regularColor] )\n\t\t\tk++\n\t\t\tl++\n\t\t} else {\n\t\t\tarray[k] = auxArray[r]\n\t\t\tanimation.push( ['compare', k, r, dangerColor] )\n\t\t\tanimation.push(['replace', k , auxArray[r]])\n\t\t\tanimation.push( ['compare', k, r, regularColor] )\n\t\t\tk++\n\t\t\tr++\n\t\t}\t\n\t}\n\twhile (l <= pivotIndex) {\n\t\tarray[k] = auxArray[l]\n\t\tanimation.push( ['replace', k , auxArray[l]] )\n\t\tk++\n\t\tl++\n\t}\n\twhile (r <= end) {\n\t\tarray[k] = auxArray[r]\n\t\tanimation.push(['replace', k , auxArray[r]])\n\t\tk++\n\t\tr++\n\t}\n}","import React from \"react\";\n\n\nconst successColor = 'rgba(166, 255, 241, 0.8)'\nconst dangerColor = 'rgba(250, 128, 114, 0.9)'\nconst currentColor = 'rgba(116, 208, 241, 1)'\nconst regularColor = 'rgba(116, 208, 241,0.8)'\n\nexport default function QuickSortAnimation(array) {\n\tlet n = array.length\n\tconst animation = Array()\n\tQuickSortHelper(array, 0 , n-1, animation)\n\treturn animation\n}\n\n\nfunction QuickSortHelper(array, begin, end, animation){ \n\tif (end - begin <= 0){\n\t\treturn (null)\n\t}\n\tlet randomIndex = Math.floor((end +1 - begin)*Math.random() + begin)  // end is included in the random choice\n\tlet newPivotIndex = partitioningSubRoutine(array, randomIndex, begin, end, animation)\n\tif (newPivotIndex > begin) {\n\t\tQuickSortHelper(array, begin, newPivotIndex - 1 , animation)\n\t}\n\tif (newPivotIndex < end) {\n\t\tQuickSortHelper (array, newPivotIndex +1, end, animation)\n\t}\n}\n\n\nfunction partitioningSubRoutine (array, pivotIndex, begin, end, animation){\n\tlet i = begin -1 \n\tswap(array, pivotIndex, end)\n\tanimation.push ([\"highlight\", pivotIndex , end, dangerColor])\n\tanimation.push([\"swap\", pivotIndex, end, successColor])\n\tanimation.push ([\"highlight\", pivotIndex , end, regularColor])\n\tlet pivot = array[end]\n\tfor (let j = begin; j<end; j++){\n\t\tif (array[j] < pivot){\n\t\t\ti++\n\t\t\tswap(array, i, j)\n\t\t\tanimation.push ([\"highlight\", i , j, dangerColor])\n\t\t\tanimation.push([\"swap\", i, j, successColor])\n\t\t\tanimation.push ([\"highlight\", i , j, regularColor])\n\t\t}\n\t}\n\tswap (array, i+1, end)\n\tanimation.push ([\"highlight\", i+1 , end, dangerColor])\n\tanimation.push([\"swap\", i+1, end, successColor])\n\tanimation.push ([\"highlight\", i+1 , end, regularColor])\n\treturn i+1\n}\n\nfunction swap(array, i, j){\n\tlet temp = array[i]\n\tarray[i] = array[j]\n\tarray[j] = temp\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React,{Component} from \"react\";\nimport { Button, Dropdown, DropdownButton } from 'react-bootstrap'\nimport './Bar.css'\nimport bubbleSortAnimation from \"./SortingAlgorithms/BubbleSort\"\nimport InsertionSort from \"./SortingAlgorithms/insertionSort\"\nimport MergeSortAnimation from \"./SortingAlgorithms/mergeSort\"\nimport QuickSortAnimation from \"./SortingAlgorithms/QuickSort\"\n\n\n\nvar idx1 = -1\nvar idx2 = -1\nvar DEFAULT_SIZE = 50\nvar IN_PROGRESS = false  \n\nclass Bars extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.bubbleRef = React.createRef()\n\t\tthis.insertionRef = React.createRef() \n\t\t\n\t\tconst myList= []\n\t\tfor (let i = 0; i<DEFAULT_SIZE; i++){\n\t\t\tconst newNumber = Math.floor(270*Math.random() + 270)\n\t\t\tmyList.push(newNumber)\n\t\t}  \n\t\tthis.state = {\n\t\t\tList: myList,\n\t\t\tsize: DEFAULT_SIZE,\n\t\t\tpossibleSize: [6,10,30,50,100,200],\n\t\t\tanimationSpeed: 70000/DEFAULT_SIZE**2,\n\t\t\tidx1:-1,\n\t\t\tidx2:-1,\n\t\t\tinProgress: false\n\t\t} \n\t}\n\n\tgenerateArray = () => {\n\t\tif (IN_PROGRESS){\n\t\t\treturn\n\t\t}\n\t\tthis.setState({\n\t\t\tList:[]\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tconst newList = []\n\t\t\tfor (let i = 0; i<this.state.size; i++){\n\t\t\t\tconst newNumber = Math.floor(270*Math.random() + 270)\n\t\t\t\tnewList.push(newNumber)\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tList: newList\n\t\t\t})\n\t\t}, 100)\n\n\t}\n\n\thandleSizeChange = (newSize) => {\n\t\tthis.setState({\n\t\t\tList:[]\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tthis.setState ({\n\t\t\t\tsize: newSize,\n\t\t\t\tanimationSpeed: 70000/newSize**2\n\t\t\t})\n\t\t\tthis.generateArray()\n\t\t}, 100)\n\t\t\n\t}\n\n\tcreateBar = (height, Index) => {\n\t\treturn <div \n\t\t\tclassName = \"array-bar\" \n\t\t\tstyle={{height:height}} \n\t\t\tkey = {Index} \n\t\t\tdraggable = \"true\" \n\t\t\tonDragStart = {() => {this.handleDrag(Index)}} \n\t\t\tonDragOver = {() => {this.handleDrop(Index)}}\n\t\t\tonDragEnd = {this.handleEndDrag}/>\n\t}\n\n\thandleEndDrag = () => {\n\t\tconst myList = this.state.List\n\t\tconst temp = myList[idx1]\n\t\tmyList[idx1] = myList[idx2]\n\t\tmyList[idx2] = temp\n\t\tthis.setState({\n\t\t\tList: myList\n\t\t})\n\n\t}\n\n\thandleDrag = (index) => {\n\t\tidx1 = index\n\t\tdocument.addEventListener(\"dragenter\", function(event) {\n\t\t  if ( event.target.className == \"array-bar\" ) {\n\t\t    event.target.style.border = \"7px dotted rgba(30, 210, 130,1)\";\n\t\t  }\n\t\t});\n\t\tdocument.addEventListener(\"dragleave\", function(event) {\n\t\t  if ( event.target.className == \"array-bar\" ) {\n\t\t    event.target.style.border = \"\";\n  }\n});\n\t}\n\n\thandleDrop = (index) => {\n\t\tidx2 = index\n\n\n\t}\n\n\tbubbleSort = () => {\n\t\tif(IN_PROGRESS){\n\t\t\treturn \n\t\t}\n\t\tIN_PROGRESS = true \n\t\tconst myList = this.state.List\n\t\tAnimation = bubbleSortAnimation(myList);\n\t\tfor (let i = 0; i<Animation.length; i++){\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar')\n\t\t\tconst idx1 = Animation[i][0]\n\t\t\tconst idx2 = Animation[i][1]\n\t\t\tconst barOneStyle = arrayBars[idx1].style\n\t\t\tconst barTwoStyle = arrayBars[idx2].style\n\t\t\tif (Animation[i][2] === 'swap'){\n\t\t\t\tsetTimeout(() => {\t\n\t\t\t\t\tconst temp = barOneStyle.height\n\t\t\t\t\tbarOneStyle.height = barTwoStyle.height \n\t\t\t\t\tbarTwoStyle.height = temp\n\t\t\t\t\tbarOneStyle.backgroundColor = Animation[i][3]\n\t\t\t\t\tbarTwoStyle.backgroundColor = Animation[i][3]\n\t\t\t\t\tif (i === Animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t}, (i)*this.state.animationSpeed)\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = Animation[i][2]\n\t\t\t\t\tbarTwoStyle.backgroundColor = Animation[i][2]\n\t\t\t\t\tif (i === Animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t}, (i)*this.state.animationSpeed)\n\t\t\t\t \n\t\t\t}\n\t\t}\n\t}\n\n\n\tinsertionSort = () => {\n\t\tif (IN_PROGRESS){\n\t\t\treturn \n\t\t}\n\t\tIN_PROGRESS = true\n\t\tconst myList = this.state.List\n\t\tAnimation = InsertionSort(myList);\n\t\tfor (let i = 0; i<Animation.length; i++){\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar')\n\t\t\tif (Animation[i][1] === 'highlight'){\n\t\t\t\tconst idx1 = Animation[i][0]\n\t\t\t\tconst barStyle = arrayBars[idx1].style\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarStyle.backgroundColor = Animation[i][2]\n\t\t\t\t\tif (i === Animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t}, i*this.state.animationSpeed)\n\t\t\t} else {\n\t\t\t\tconst idx1 = Animation[i][0]\n\t\t\t\tconst idx2 = Animation[i][1]\n\t\t\t\tconst barOneStyle = arrayBars[idx1].style\n\t\t\t\tconst barTwoStyle = arrayBars[idx2].style\n\t\t\t\tif (Animation[i][2] === 'swap'){\n\t\t\t\t\tsetTimeout(() => {\t\n\t\t\t\t\t\tconst temp = barOneStyle.height\n\t\t\t\t\t\tbarOneStyle.height = barTwoStyle.height \n\t\t\t\t\t\tbarTwoStyle.height = temp\n\t\t\t\t\t\tbarOneStyle.backgroundColor = Animation[i][3]\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = Animation[i][3]\n\t\t\t\t\t\tif (i === Animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i*this.state.animationSpeed)\n\t\t\t\t} \n\t\t\t\telse {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = Animation[i][2]\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = Animation[i][2]\n\t\t\t\t\t\tif (i === Animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i*this.state.animationSpeed)\t \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\tmergeSort = () => {\n\t\tif (IN_PROGRESS){\n\t\t\treturn \n\t\t}\n\t\tIN_PROGRESS = true \n\t\tconst myList = this.state.List\n\t\tconst animation = MergeSortAnimation(myList)\n\t\tfor (let i = 0 ; i<animation.length ; i++){\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar')\n\t\t\tif (animation[i][0] === 'replace') {\n\t\t\t\tconst idx = animation[i][1]\n\t\t\t\tconst newHeight = animation[i][2]\n\t\t\t\tconst barStyle = arrayBars[idx].style \n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tbarStyle.height = `${newHeight}px`\n\t\t\t\t\tif (i === animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}  \n\t\t\t\t}, (i+1)*this.state.animationSpeed*2)\n\t\t\t} else {\n\t\t\t\tconst idx1 = animation[i][1]\n\t\t\t\tconst idx2 = animation[i][2]\n\t\t\t\tconst barOneStyle = arrayBars[idx1].style\n\t\t\t\tconst barTwoStyle = arrayBars[idx2].style\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbarOneStyle.backgroundColor = animation[i][3]\n\t\t\t\t\tbarTwoStyle.backgroundColor = animation[i][3]\n\t\t\t\t\tif (i === animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t}, (i+1)*this.state.animationSpeed*2)\n\t\t\t}\n\t\t}\n\t}\n\n\tquickSort = () => {\n\t\tif (IN_PROGRESS){\n\t\t\treturn \n\t\t}else{\n\t\t\tIN_PROGRESS = true\n\t\t\tconst myArray = this.state.List\n\t\t\tconsole.log(myArray)\n\t\t\tconst animation = QuickSortAnimation(myArray)\n\t\t\tfor (let i = 0; i<animation.length; i++){\n\t\t\t\tconst arrayBars = document.getElementsByClassName('array-bar')\n\t\t\t\tconst idx1 = animation[i][1]\n\t\t\t\tconst idx2 = animation[i][2]\n\t\t\t\tconst barOneStyle = arrayBars[idx1].style\n\t\t\t\tconst barTwoStyle = arrayBars[idx2].style\n\t\t\t\tif (animation[i][0] == \"highlight\"){\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tbarOneStyle.backgroundColor = animation[i][3]\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = animation[i][3]\n\t\t\t\t\t\tif (i === animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i*this.state.animationSpeed)\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\t\n\t\t\t\t\t\tconst temp = barOneStyle.height\n\t\t\t\t\t\tbarOneStyle.height = barTwoStyle.height \n\t\t\t\t\t\tbarTwoStyle.height = temp\n\t\t\t\t\t\tbarOneStyle.backgroundColor = animation[i][3]\n\t\t\t\t\t\tbarTwoStyle.backgroundColor = animation[i][3]\n\t\t\t\t\t\tif (i === animation.length-1){\n\t\t\t\t\t\t\tIN_PROGRESS = false\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i*this.state.animationSpeed)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.size !== this.state.size) {\n\t\t\tthis.generateArray()\n\t\t}\n\t}\n\n\n\trender(){\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className = 'style-btn-group  btn-group'>\n\t\t\t\t\t<Button className = \"button-generate\" onClick = {this.generateArray}>\n\t\t\t\t\t\tGenerate a new array! \n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button className = \"button-sort\" onClick = {this.bubbleSort}>\n\t\t\t\t\t\tBubbleSort !\n\t\t\t\t\t</Button>\t\n\t\t\t\t\t<Button className = \"button-sort\" onClick = {this.insertionSort}>\n\t\t\t\t\t\tInsertionSort !\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button className = \"button-sort\" onClick = {this.mergeSort}>\n\t\t\t\t\t\tMergeSort !\n\t\t\t\t\t</Button>\t\t\n\t\t\t\t\t<Button className = \"button-sort\" onClick = {this.quickSort}>\n\t\t\t\t\t\tQuickSort !\n\t\t\t\t\t</Button>\n\t\t\t\t\t<DropdownButton  className = \"button-color-2\" size = \"lg\" variant = \"info\" title=\" Select the array size \">\n\t\t\t\t\t  {this.state.possibleSize.map( \n\t\t\t\t\t  \t(size, index) => (<Dropdown.Item \n\t\t\t\t\t  \t\t\tkey = {index}\n\t\t\t\t\t\t  \t\tonClick = {() => {this.handleSizeChange(size)}}> \n\t\t\t\t\t\t  \t\t\t{size} items \n\t\t\t\t\t\t  \t\t</Dropdown.Item>)) \n\t\t\t\t\t  \t\t}\n\t\t\t\t\t</DropdownButton>\n\t\t\t\t</div>\n\t\t\t\t<div className = 'array-container' >\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.List.map( (height, index) => this.createBar(height,index) )\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Bars\n\n","import React, {Component} from 'react'\nimport Popup from \"../Pop-up/Pop-up\"\nimport {Button} from \"react-bootstrap\"\nimport '../Bar.css'\n\n\nexport default function bubbleSortAnimation(currentList) {\n\n\t\tconst successColor = 'rgba(50, 230, 150,0.8)'\n\t\tconst dangerColor = 'rgba(255,60,60,0.8)'\n\t\tconst currentColor = 'rgba(0,240,205,0.8)'\n\t\tlet sizeList = currentList.length\n\t\tlet j = 0 \n\t\tlet notSorted = true\n\t\tconst animation = []\n\t\twhile (notSorted){\n\t\t\tnotSorted = false\n\t\t\tfor (let i = 1; i<sizeList-j; i++ ){\n\t\t\t\tif (currentList[i]<currentList[i-1]){\n\t\t\t\t\tnotSorted = true\n\t\t\t\t\tvar temp = currentList[i]\n\t\t\t\t\tcurrentList[i] = currentList[i-1]\n\t\t\t\t\tcurrentList[i-1] = temp\n\t\t\t\t\tanimation.push([i,i-1, dangerColor])\n\t\t\t\t\tanimation.push( [i,i-1,'swap' , successColor] )\n\t\t\t\t\tanimation.push([i,i-1, 'rgba(116, 208, 241,0.8)'])\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tanimation.push([i,i-1, successColor])\n\t\t\t\t\tanimation.push([i,i-1,'rgba(116, 208, 241,0.8)'])\n\t\t\t\t}\n\t\t\t}\n\t\t\tj++\n\t\t} \n\t\treturn (animation)\n\t}\n\n\t\n\n\n\t\n","import React, {Component} from 'react'\nimport Popup from \"../Pop-up/Pop-up\"\nimport {Button} from \"react-bootstrap\"\nimport '../Bar.css'\n\n\nexport default function InsertionSort(currentList){\n\n\tconst successColor = 'rgba(50, 230, 150,0.8)'\n\tconst dangerColor = 'rgba(250, 128, 114,0.9)'\n\tconst currentColor = 'rgba(30, 165, 251,0.95)'\n\tconst regularColor = 'rgba(116, 208, 241,0.8)'\n\tlet sizeList = currentList.length \n\tconst animation = []\n\n\tfor (let j = 1; j<sizeList; j++){\n\t\tlet i = j;\n\t\tanimation.push([i, 'highlight', currentColor])\n\t\twhile (i>0 && currentList[i] < currentList[i-1]){\n\t\t\tanimation.push([i, i-1, dangerColor])\n\t\t\tanimation.push([i, i-1, 'swap', successColor])\n\t\t\tanimation.push([i, i-1, regularColor])\n\t\t\tvar temp = currentList[i]\n\t\t\tcurrentList[i] = currentList[i-1]\n\t\t\tcurrentList[i-1] = temp\n\t\t\ti--\n\t\t}\n\t\tanimation.push([j, 'highlight', regularColor])\n\t}\n\n\treturn (animation)\n}\n","import React,{Component} from 'react';\nimport './SwitchButton.css'\n\nclass Switch extends Component {\n\n    constructor ( props ) {\n        super( props );\n\t\t\n\t\tthis.state = {\n\t\t\tisChecked: false\n\t\t}\n    }\n\t\n\n    render () {\n\n        return(\n            <div className=\"switch-container\">\n                <label>\n                    <input checked={ this.state.isChecked } onChange={ this.handleChange } className=\"switch\" type=\"checkbox\" />\n                    <div>\n              \n                        <div></div>\n                    </div>\n                </label>\n            </div>\n        );\n    }\n\n\n    handleChange =  () => {\n    \tthis.props.modeFunction()\n\t\tthis.setState( { isChecked: !this.state.isChecked } );\n    }\n\n}\n\nexport default Switch","import React,{Component} from 'react';\nimport './App.css';\nimport Bars from './Components/Bar.jsx'\nimport Switch from \"./Components/SwitchButton\"\n\n\n\nconst DARK_COLOR = 'rgba(40,40,50,0.95)'\nconst LIGHT_COLOR = 'rgba(240,240,240,0.95)'\n\nclass App extends Component {\n\n\tstate = {backgroundColor: LIGHT_COLOR}\n\n\tgetDarkMode = () => {\n\t\tif (this.state.backgroundColor === LIGHT_COLOR){\n\t\t\tthis.setState({\n\t\t\t\tbackgroundColor: DARK_COLOR\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tbackgroundColor: LIGHT_COLOR\n\t\t\t})\t\t\t\n\t\t}\n\n\t}\n\n\trender(){\n\t  return (\n\t    <div className = \"App\" style = {{backgroundColor: this.state.backgroundColor}}>\n\t\t    <div className = \"tool mb-0\">\n\t\t    \t<h1 className = \"myFont\"> Sorting Visualizer </h1>\n\t\t    \t<Switch modeFunction = {this.getDarkMode}/>\n\t\t    </div>\n\t\t    <Bars/>\n\t      \t\n\t    </div>\n\t  );\n\t}\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}